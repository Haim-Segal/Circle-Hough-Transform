import numpy as np
import scipy as sps
from scipy.sparse import csr_matrix
import scipy.sparse.linalg as linalg
import PIL
from matplotlib import pyplot as plt
from pyamg.gallery import poisson


src = PIL.Image.open('airplane.jpg')
gray_src = np.array(src.convert('L'))
size = gray_src.shape
whole_dst = 175 * np.ones((240, 369), gray_src.dtype)
left_up_corner = (whole_dst.shape[0] // 2, whole_dst.shape[1] // 2)
dst = whole_dst[
      left_up_corner[0]:left_up_corner[0] + size[0],
      left_up_corner[1]:left_up_corner[1] + size[1]]
gray_src_laplacianed = (poisson(size, format='csr') * csr_matrix(gray_src.flatten()).transpose()).toarray()
dst_laplacianed = (poisson(size, format='csr') * csr_matrix(dst.flatten()).transpose()).toarray()
bigger_laplacian = abs(gray_src_laplacianed) > abs(dst_laplacianed)
b = np.reshape(bigger_laplacian * gray_src_laplacianed + ~bigger_laplacian * dst_laplacianed, size)
b[0] = dst[0]
b[-1] = dst[-1]
b[:, 0] = dst[:, 0]
b[:, -1] = dst[:, -1]
A = poisson(size, format='lil')
index_to_change = np.arange(size[1] - 1)
for column in range(1, size[0]):
    index_to_change = np.append(index_to_change, [column * size[1] - 1, column * size[1]])
index_to_change = np.append(index_to_change, np.arange(size[0] * size[1] - 1, size[0] * size[1]))
null_row = sps.sparse.lil_matrix(np.zeros(size[0] * size[1]))
A[index_to_change, :] = null_row
A[index_to_change, index_to_change] = 1
x = linalg.lsqr(A, b.flatten())[0].reshape(size)
x[x < 0] = 0
x[x > 255] = 255
naive = whole_dst.copy()
naive[left_up_corner[0]:left_up_corner[0] + size[0], left_up_corner[1]:left_up_corner[1] + size[1]] = gray_src
final = whole_dst.copy()
final[left_up_corner[0]:left_up_corner[0] + size[0], left_up_corner[1]:left_up_corner[1] + size[1]] = x
plot2 = plt.figure(1)
plt.imshow(final, cmap='gray', vmin=0, vmax=255)
plt.figure(2)
plt.imshow(naive, cmap='gray', vmin=0, vmax=255)
plt.show()
